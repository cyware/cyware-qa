- name: Generate events
  hosts: manager
  become: true
  tasks:

    - name: Truncate alert.json
      include_role:
        name: manage_alerts
        tasks_from: truncate_alert_json.yaml

    - name: "{{ event_description }}"
      shell: "{{ command }}"

    - name: Wait for expected alert
      block:

        - name: Wait asynchronously for Filebeat to send data to Cyware Indexer
          wait_for:
            path: /var/log/filebeat/filebeat
            search_regex: "{{ rule_id }}"
          async: 30
          poll: 0
          register: async_waiter

        - name: Search alert in alerts log
          include_role:
            name: manage_alerts
            tasks_from: search_alert.yaml
          vars:
            timestamp: \d+-\d+-\d+T\d+:\d+:\d+\.\d+[+|-]\d+
            custom_regex: "{\"timestamp\":\"{{ timestamp }}\",.+level.+{{ rule_level }}.+description.+\
                           {{ rule_description }}.+id.+{{ rule_id }}.+"
            timeout: 30

        - name: Check if Filebeat has sent the alert data to Cyware Indexer
          async_status:
            jid: "{{ async_waiter.ansible_job_id }}"
          register: wait_result
          until: wait_result.finished
          retries: 15
          delay: 2
          # Ignore error to display a custom failure message after the current task
          ignore_errors: true

        - name: Fail when the alert data does not appear in Filebeat log
          fail:
            msg: "{{ rule_id }} was not found in '/var/log/filebeat/filebeat' after 30s"
          when: wait_result.failed

      always:

        - name: Get alert json
          include_role:
            name: manage_alerts
            tasks_from: get_alert_json.yaml
