- name: Configure manager environment
  hosts: manager
  become: true
  tasks:

    - name: Check if Osquery is installed or not on CentOS
      command: systemctl status osqueryd --no-pager
      register: osquery_check
      when: ansible_facts['distribution'] == "CentOS"
      # Ignore non-zero return codes for use in subsequent checks
      ignore_errors: true

    - name: Install Osquery on CentOS
      shell: |
        curl -LO {{ s3_url }}/osquery_integration/osquery-4.5.1-1.linux.x86_64.rpm
        rpm -ivh ./osquery-4.5.1-1.linux.x86_64.rpm
      register: installation
      # If the return code is 0, it means that Osquery is already installed and running.
      # If the return code is 3, it means that Osquery is installed but not running.
      when: (ansible_facts['distribution'] == "CentOS" and osquery_check.rc != 0 and osquery_check.rc != 3)

    - name: Configure Osquery
      shell: |
        curl {{ s3_url }}/osquery_integration/osquery_integration.json -o /etc/osquery/osquery.conf
        chown root:root /etc/osquery/osquery.conf
        chmod 0644 /etc/osquery/osquery.conf
      # If the installation return code is 0, it means that the installation was successful.
      when: (osquery_check.rc == 3 or osquery_check.rc == 0 or installation.rc == 0)

    - name: Configure the Osquery module
      include_role:
        name: manage_cyware_configurations
        tasks_from: write_cyware_config.yaml
      vars:
        config_block: |
          <wodle name="osquery">
          <disabled>no</disabled>
          <run_daemon>yes</run_daemon>
          <bin_path>/usr/bin</bin_path>
          <log_path>/var/log/osquery/osqueryd.results.log</log_path>
          <config_path>/etc/osquery/osquery.conf</config_path>
          <add_labels>no</add_labels>
          </wodle>
        os: linux

    - name: Start Osquery
      shell: systemctl start osqueryd
      when: (osquery_check.rc == 3 or osquery_check.rc == 0)

    - name: Restart cyware-manager
      include_role:
        name: manage_cyware
        tasks_from: restart_cyware.yaml
      vars:
        os: linux

    - name: Check if stress is installed or not on CentOS
      command: rpm -q stress
      register: stress_check
      when: ansible_facts['distribution'] == "CentOS"
      # Ignore non-zero return codes for use in subsequent checks (installation)
      ignore_errors: true

    - name: Install stress
      shell: |
        yum install -y epel-release
        yum -y install stress
      register: stressing
      when: (ansible_facts['distribution'] == "CentOS" and stress_check.rc == 1)
