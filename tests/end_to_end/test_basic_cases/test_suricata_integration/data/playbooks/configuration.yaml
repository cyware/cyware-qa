- name: Configure Ubuntu agent environment
  hosts: ubuntu-agent
  become: true
  vars:
    suricata_conf_path: /etc/suricata/suricata.yaml
    suricata_log_path: /var/log/suricata/suricata.log
  tasks:

    - name: Configure Cyware to read Suricata logs file
      include_role:
        name: manage_cyware_configurations
        tasks_from: write_cyware_config.yaml
      vars:
        config_block: |
          <localfile>
          <log_format>syslog</log_format>
          <location>/var/log/suricata/eve.json</location>
          </localfile>
        os: linux

    - name: Restart cyware-agent to apply the change
      include_role:
        name: manage_cyware
        tasks_from: restart_cyware.yaml
      vars:
        os: linux

    - name: Check if Suricata is installed
      shell: dpkg -l suricata | grep suricata
      register: check_suricata
      ignore_errors: true

    - name: Add the repo to install Suricata
      shell: |
        add-apt-repository ppa:oisf/suricata-stable -y
      when: '"no packages found matching suricata" in check_suricata.stderr'

    - name: Install Suricata
      package:
        name: suricata
        state: present
      when: '"no packages found matching suricata" in check_suricata.stderr'

    - name: Enable and stop Suricata
      systemd:
        daemon_reload: true
        enabled: true
        state: stopped
        name: suricata

    - name: Change the default interface
      replace:
        path: "{{ suricata_conf_path }}"
        regexp: 'af-packet:\n  - interface: eth0'
        replace: 'af-packet:\n  - interface: {{ ansible_default_ipv4.interface }}'

    - name: Configure external network in Suricata
      replace:
        path: "{{ suricata_conf_path }}"
        regexp: 'EXTERNAL_NET: "!\$HOME_NET"'
        replace: 'EXTERNAL_NET: "any"'

    - name: Configure rules path in Suricata
      replace:
        path: "{{ suricata_conf_path }}"
        regexp: 'default-rule-path: \S.*\n\nrule-files:\n.*- suricata.rules'
        replace: 'default-rule-path: /var/lib/suricata/rules\n\nrule-files:\n  - "*.rules"'

    - name: Configure live rule reloading
      blockinfile:
        path: "{{ suricata_conf_path }}"
        insertafter: EOF
        block: "detect-engine:\n  - rule-reload: true"

    - name: Clean Suricata logs
      shell: echo '' >  "{{ suricata_log_path }}"

    - name: Updating Suricata rules
      shell: suricata-update

    - name: Set flag to control the next loop
      set_fact:
        loop_finished: false

    - name: Ensuring Suricata's start-up
      vars:
        sleep_durations:
          - 30
          - 40
          - 60
        durations: "{{ item }}"
        loop_status: "{{ loop_finished }}"
      include_tasks: start_suricata.yaml
      loop: "{{ sleep_durations | batch(1) | list }}"
      register: result

    - name: Fail if Suricata refuses to start
      fail: msg="Suricata refuses to start after 3 attempts."
      when: not (loop_finished | bool)
