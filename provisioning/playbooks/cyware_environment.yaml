# Certificates generation
- hosts: wi1
  roles:
    - role: "../roles/cyware/cyware-indexer"
      indexer_network_host: "{{ private_ip }}"
      perform_installation: false
  become: true
  vars:
    indexer_node_master: true
  tags:
    - generate-certs

# Cyware indexer cluster
- hosts: wi_cluster
  roles:
    - role: "../roles/cyware/cyware-indexer"
      indexer_network_host: "{{ private_ip }}"
  become: true
  become_user: root
  vars:
    indexer_node_master: true

- hosts: manager
  roles:
    - role: "../roles/cyware/ansible-cyware-manager"
  become: true
  become_user: root

- hosts: filebeat
  roles:
    - role: "../roles/cyware/ansible-filebeat-oss"
  become: true
  become_user: root

# Indexer + dashboard node
- hosts: dashboard
  roles:
    - role: "../roles/cyware/cyware-indexer"
    - role: "../roles/cyware/cyware-dashboard"
  become: true
  become_user: root
  vars:
    indexer_network_host: "{{ hostvars.dashboard.private_ip }}"
    indexer_node_master: false
    indexer_node_ingest: false
    indexer_node_data: false
    indexer_cluster_nodes: "{{ indexer_discovery_nodes }}"
    ansible_shell_allow_world_readable_temp: true
    cyware_api_credentials:
      - id: default
        url: https://{{ hostvars.master.private_ip }}
        port: 55000
        username: cyware
        password: cyware

# Agent
- hosts: agent
  tasks:
    - name: Agents
      block:
        - name: Install UNIX based agents
          become: true
          become_user: root
          import_role:
            name: "../roles/cyware/ansible-cyware-agent"
          when: ansible_os_family != "Windows"

        - name: Install Windows based agents
          import_role:
            name: "../roles/cyware/ansible-cyware-agent"
          when: ansible_os_family == "Windows"
